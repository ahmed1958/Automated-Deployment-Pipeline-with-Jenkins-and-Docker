    pipeline {
        agent any
        environment {
            DOCKER_IMAGE = 'sekovv/countingapp'
        }
        stages {
            stage('Check Trigger') {
                steps {
                    script {
                        if (env.GIT_PREVIOUS_SUCCESSFUL_COMMIT) {
                            echo "Triggered by GitHub webhook."
                        } else {
                            echo "Pipeline not triggered by a GitHub webhook."
                        }
                    }
                }
            }

            stage('Clone Repo') {
            steps {
                git branch: 'main', url: 'https://github.com/ahmed1958/Automated-Deployment-Pipeline-with-Jenkins-and-Docker'
            }
            }
           stage('Build Image') {
            steps {
                script {
                    sh 'cd counting_App && docker-compose build'
                }
            }
           }
           stage('Test Image') {
            steps {
                script {
                    // You can define your tests here, for example, running a container to test the application
                        sh 'echo "Running tests..."'
                        sh 'docker-compose up -d'
                        sh 'docker exec my_app_container python -m unittest test_hello.py'
                        sh 'docker-compose down'

                }
            }
           }

            stage('Push Image') {
            steps {
                script {
                    // Use the correct registry URL
                    docker.withRegistry('https://index.docker.io/v1/', 'docker_hub_log') {
                        // Ensure that DOCKER_IMAGE includes the tag
                        docker.image(DOCKER_IMAGE).push() // Specify a tag if needed
                    }
                }
            }
            }
   
    }
    post {
        success {
            // Use the Mailer plugin to send email on success
            mail to: 'youasf5678@gmail.com',
                 subject: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' - Success",
                 body: "The job succeeded. Check details: ${env.BUILD_URL}"
        }
        failure {
            // Use the Mailer plugin to send email on failure
            mail to: 'youasf5678@gmail.com',
                 subject: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' - Failed",
                 body: "The job failed. Check details: ${env.BUILD_URL}"
        }
    }
}
